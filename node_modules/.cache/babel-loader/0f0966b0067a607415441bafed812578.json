{"ast":null,"code":"var _jsxFileName = \"/Users/nicollete/Desktop/API-Recipe-Project/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\n// Default landing page\nimport React, { useEffect, useState } from 'react';\nimport Button from '../components/Button';\nimport Drink from '../components/Drink';\nimport Food from '../components/Food';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport Search from '../components/Search';\nimport { BiError } from 'react-icons/bi';\nimport { ImSad } from 'react-icons/im';\nimport DrinkSearchResults from '../components/DrinkSearchResults';\nimport FoodSearchResults from '../components/FoodSearchResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  // State variables for displaying correct API information when available\n  const [url, seturl] = useState('');\n  const [searchTerm, setsearchTerm] = useState('');\n  const [api, setapi] = useState('');\n  const [info, setinfo] = useState('');\n  const [infoReady, setinfoReady] = useState(false);\n  const [infoIsFood, setinfoIsFood] = useState(false);\n  const [infoIsNull, setinfoIsNull] = useState(false);\n  const [id, setid] = useState('');\n  const [choiceClicked, setchoiceClicked] = useState(false);\n  const [choiceInfo, setchoiceInfo] = useState('');\n  const [warning, setWarning] = useState(''); // Function to handle form information when submitted to make sure nothing is left blank and update appropriate states\n\n  const findRecipe = e => {\n    e.preventDefault();\n\n    if (e.target.recipeType.value.trim() !== '' && e.target.searchTerm.value.trim() !== '') {\n      if (e.target.recipeType.value.includes(\"meal\")) {\n        setapi(\"meal\");\n      } else {\n        setapi(\"drink\");\n      }\n\n      seturl(e.target.recipeType.value);\n      setsearchTerm(e.target.searchTerm.value);\n      e.target.reset();\n    } else {\n      setWarning([/*#__PURE__*/_jsxDEV(BiError, {\n        style: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this), \" Please don't leave any fields blank\"]);\n    }\n  }; // Function to return to search form when new search button is pressed\n\n\n  const newSearch = () => {\n    setinfo('');\n    setchoiceClicked(false);\n    setchoiceInfo('');\n    setinfoReady(false);\n    setWarning('');\n    setinfoIsNull(false);\n  };\n\n  const backToSearch = () => {\n    setchoiceClicked(false);\n    setchoiceInfo('');\n  };\n\n  const choiceSelected = e => {\n    e.preventDefault();\n    setid(e.target.id);\n  }; // When all appropriates states have been updated, api info will be fetched and viewport will display all gathered info\n\n\n  useEffect(() => {\n    async function fetchAPI() {\n      if (url !== '') {\n        const response = await fetch(`${url}api/json/v1/1/search.php?s=${searchTerm}`);\n        const data = await response.json();\n\n        if (api === \"meal\") {\n          setinfo(data.meals);\n          setinfoIsFood(true);\n        } else {\n          setinfo(data.drinks);\n          setinfoIsFood(false);\n        }\n\n        setinfoReady(true);\n      }\n\n      if (id !== '') {\n        if (api === \"meal\") {\n          const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n          const data = await response.json();\n          setchoiceInfo(data.meals);\n        } else {\n          const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n          const data = await response.json();\n          setchoiceInfo(data.drinks);\n        }\n\n        setchoiceClicked(true);\n      }\n    }\n\n    ;\n    fetchAPI();\n    seturl('');\n    setid('');\n\n    if (info == null) {\n      setinfoIsNull(true);\n    }\n  }, [url, searchTerm, api, info, id]); // Structure to display info on viewport\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.display,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: styles.main,\n      children: infoReady ? infoIsNull ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: styles.h2,\n          children: [\"all recipes found for: \", searchTerm]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"New Search\",\n          clickEvent: newSearch,\n          style: styles.button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(ImSad, {\n            style: styles.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 28\n          }, this), \" We're sorry. We couldn't find any recipes matching \", searchTerm, \". Please try again.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : infoIsFood ? choiceClicked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [choiceInfo.map((recipe, index) => /*#__PURE__*/_jsxDEV(Food, {\n          data: recipe\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"New Search\",\n          clickEvent: newSearch,\n          style: styles.button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Back To Search Results\",\n          clickEvent: backToSearch,\n          style: styles.button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: styles.h2,\n          children: [\"all recipes found for: \", searchTerm]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"New Search\",\n          clickEvent: newSearch,\n          style: styles.button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), info.map((recipe, index) => /*#__PURE__*/_jsxDEV(FoodSearchResults, {\n          data: recipe,\n          choiceSelected: choiceSelected\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"New Search\",\n          clickEvent: newSearch,\n          style: styles.button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : choiceClicked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [choiceInfo.map((recipe, index) => /*#__PURE__*/_jsxDEV(Drink, {\n          data: recipe\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"New Search\",\n          clickEvent: newSearch,\n          style: styles.button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Back To Search Results\",\n          clickEvent: backToSearch,\n          style: styles.button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: styles.h2,\n          children: [\"all recipes found for: \", searchTerm]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"New Search\",\n          clickEvent: newSearch,\n          style: styles.button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this), info.map((recipe, index) => /*#__PURE__*/_jsxDEV(DrinkSearchResults, {\n          data: recipe,\n          choiceSelected: choiceSelected\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"New Search\",\n          clickEvent: newSearch,\n          style: styles.button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: styles.h2,\n          children: \"search free recipes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.instructions,\n          children: \"Welcome to Anyone Can Cook, the online database for finding delicious recipes for any occasion! Looking for something specific? Enter a search word below and find exactly what you're looking for. Feeling a little adventourous? Try the random meal or drink recipe generators and try something new.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          findRecipe: findRecipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.warning,\n          children: warning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"A3ib4+WJB/BzM3VoVRd2+MLKapc=\");\n\n_c = Home;\nexport default Home;\nconst styles = {\n  display: {\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  main: {\n    flexGrow: '1',\n    textAlign: 'center',\n    color: 'rgb(21, 21, 21)'\n  },\n  h2: {\n    borderBottom: 'dashed 2px rgba(81, 152, 114, .5)',\n    width: 'max-content',\n    margin: '2rem auto',\n    textTransform: 'capitalize'\n  },\n  instructions: {\n    width: '65rem',\n    margin: '0 auto 3rem auto'\n  },\n  warning: {\n    color: 'rgb(186, 63, 29)'\n  },\n  icon: {\n    fontSize: '1.8rem',\n    verticalAlign: 'text-top'\n  },\n  button: {\n    margin: '0 0 1.5rem 1rem',\n    width: 'max-content',\n    height: '2.5rem',\n    borderRadius: '3rem',\n    borderColor: 'rgb(161, 103, 74)',\n    color: 'rgb(161, 103, 74)',\n    backgroundColor: 'rgb(253, 255, 252)',\n    fontSize: '.9rem'\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/nicollete/Desktop/API-Recipe-Project/src/pages/Home.js"],"names":["React","useEffect","useState","Button","Drink","Food","Footer","Header","Search","BiError","ImSad","DrinkSearchResults","FoodSearchResults","Home","url","seturl","searchTerm","setsearchTerm","api","setapi","info","setinfo","infoReady","setinfoReady","infoIsFood","setinfoIsFood","infoIsNull","setinfoIsNull","id","setid","choiceClicked","setchoiceClicked","choiceInfo","setchoiceInfo","warning","setWarning","findRecipe","e","preventDefault","target","recipeType","value","trim","includes","reset","styles","icon","newSearch","backToSearch","choiceSelected","fetchAPI","response","fetch","data","json","meals","drinks","display","main","h2","button","map","recipe","index","instructions","minHeight","flexDirection","flexGrow","textAlign","color","borderBottom","width","margin","textTransform","fontSize","verticalAlign","height","borderRadius","borderColor","backgroundColor"],"mappings":"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","sourcesContent":["// Default landing page\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../components/Button';\nimport Drink from '../components/Drink';\nimport Food from '../components/Food';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport Search from '../components/Search'\nimport { BiError } from 'react-icons/bi'\nimport { ImSad } from 'react-icons/im'\nimport DrinkSearchResults from '../components/DrinkSearchResults';\nimport FoodSearchResults from '../components/FoodSearchResults';\n\nfunction Home() {\n\n    // State variables for displaying correct API information when available\n    const [url, seturl] = useState('');\n    const [searchTerm, setsearchTerm] = useState('');\n    const [api, setapi] = useState('');\n    const [info, setinfo]= useState('');\n    const [infoReady, setinfoReady] = useState(false);\n    const [infoIsFood, setinfoIsFood] = useState(false);\n    const [infoIsNull, setinfoIsNull] = useState(false);\n    const [id, setid] = useState('');\n    const [choiceClicked, setchoiceClicked] = useState(false);\n    const [choiceInfo, setchoiceInfo] = useState('');\n    const [warning, setWarning] = useState('');\n\n    // Function to handle form information when submitted to make sure nothing is left blank and update appropriate states\n    const findRecipe = (e) => {\n        e.preventDefault();\n        if(e.target.recipeType.value.trim() !== '' && e.target.searchTerm.value.trim() !== '') {\n            if(e.target.recipeType.value.includes(\"meal\")) {\n                setapi(\"meal\");\n            }\n            else {\n                setapi(\"drink\");\n            }\n            seturl(e.target.recipeType.value);\n            setsearchTerm(e.target.searchTerm.value);\n            e.target.reset();\n        }\n        else {\n            setWarning([<BiError style={styles.icon}/>, \" Please don't leave any fields blank\"]);\n        }\n    };\n\n    // Function to return to search form when new search button is pressed\n    const newSearch = () => {\n        setinfo('');\n        setchoiceClicked(false);\n        setchoiceInfo('');\n        setinfoReady(false);\n        setWarning('');\n        setinfoIsNull(false);\n    };\n\n    const backToSearch = () => {\n        setchoiceClicked(false);\n        setchoiceInfo('');\n    }\n\n    const choiceSelected = (e) => {\n        e.preventDefault();\n        setid(e.target.id);\n    }\n\n    // When all appropriates states have been updated, api info will be fetched and viewport will display all gathered info\n    useEffect(() => {\n        async function fetchAPI() {\n            if(url !== '') {\n                const response = await fetch(`${url}api/json/v1/1/search.php?s=${searchTerm}`);\n                const data = await (response.json());\n                if(api === \"meal\") {\n                    setinfo(data.meals);\n                    setinfoIsFood(true);\n                }\n                else {\n                    setinfo(data.drinks);\n                    setinfoIsFood(false);\n                }\n                setinfoReady(true);\n            }\n\n            if(id !== '') {\n                if(api === \"meal\") {\n                    const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n                    const data = await (response.json());\n                    setchoiceInfo(data.meals);\n                }\n                else {\n                    const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n                    const data = await (response.json());\n                    setchoiceInfo(data.drinks);\n                }\n                setchoiceClicked(true);\n            }\n        }; \n        fetchAPI();\n        seturl('');\n        setid('');\n        if(info == null) {\n            setinfoIsNull(true);\n        }\n    }, [url, searchTerm, api, info, id]);\n\n    // Structure to display info on viewport\n    return(\n        <div style={styles.display}>\n            <Header />\n            <main style={styles.main}>\n                {/* If API data has been fetched, results page will display a header, and a new search button. If the information gathered from the API is null, apology will display. If the API info is not null and it is a food recipe, the FoodSearchResults component will map through it and display all thumbnails and titles. If the user clicks on a thumbnail, all info for that recipe will display. If it is a drink recipe, the DrinkSearchResults component will map through it and display all thumbnails and titles. If the user clicks on a thumbnail, all info for that recipe will display. If the API data has not been fetched, the search form will display on the screen.  */}\n                {infoReady ?\n                    infoIsNull ? <>\n                        <h2 style={styles.h2}>all recipes found for: {searchTerm}</h2>\n                        <Button content=\"New Search\" clickEvent={newSearch} style={styles.button}/>\n                        <p><ImSad style={styles.icon}/> We're sorry. We couldn't find any recipes matching {searchTerm}. Please try again.</p> \n                    </>\n                    :\n                    infoIsFood ? \n                        choiceClicked ? <>\n                            {choiceInfo.map((recipe, index) => (\n                                <Food data={recipe} key={index} />\n                            ))} \n                            <Button content=\"New Search\" clickEvent={newSearch} style={styles.button}/> \n                            <Button content=\"Back To Search Results\" clickEvent={backToSearch} style={styles.button}/>\n                        </>\n                        :   <>\n                        <h2 style={styles.h2}>all recipes found for: {searchTerm}</h2>\n                        <Button content=\"New Search\" clickEvent={newSearch} style={styles.button}/> \n                        {info.map((recipe, index) => (\n                            <FoodSearchResults data={recipe} key={index} choiceSelected={choiceSelected} />\n                        ))}\n                        <Button content=\"New Search\" clickEvent={newSearch} style={styles.button}/>  \n                        </>\n                    :\n                        choiceClicked ? <>\n                            {choiceInfo.map((recipe, index) => (\n                                <Drink data={recipe} key={index} />\n                            ))} \n                            <Button content=\"New Search\" clickEvent={newSearch} style={styles.button}/> \n                            <Button content=\"Back To Search Results\" clickEvent={backToSearch} style={styles.button}/>\n                        </>\n                        : <>\n                            <h2 style={styles.h2}>all recipes found for: {searchTerm}</h2>\n                            <Button content=\"New Search\" clickEvent={newSearch} style={styles.button}/> \n                            {info.map((recipe, index) => (\n                                <DrinkSearchResults data={recipe} key={index} choiceSelected={choiceSelected} />\n                            ))}\n                            <Button content=\"New Search\" clickEvent={newSearch} style={styles.button}/>  \n                        </>\n                :   <>\n                        <h2 style={styles.h2}>search free recipes</h2>\n                        <p style={styles.instructions}>Welcome to Anyone Can Cook, the online database for finding delicious recipes for any occasion! Looking for something specific? Enter a search word below and find exactly what you're looking for. Feeling a little adventourous? Try the random meal or drink recipe generators and try something new.</p>\n                        <Search findRecipe={findRecipe}/>\n                        <p style={styles.warning}>{warning}</p> \n                    </>\n                }\n            </main>\n            <Footer />\n        </div>\n    );\n}\n\nexport default Home;\n\nconst styles = {\n    display: {\n        minHeight: '100vh',\n        display:'flex',\n        flexDirection:'column'\n    },\n    main: {\n        flexGrow:'1',\n        textAlign:'center',\n        color:'rgb(21, 21, 21)'\n    },\n    h2: {\n        borderBottom:'dashed 2px rgba(81, 152, 114, .5)',\n        width:'max-content',\n        margin:'2rem auto',\n        textTransform:'capitalize'\n    },\n    instructions: {\n        width:'65rem',\n        margin:'0 auto 3rem auto'\n    },\n    warning:{\n        color:'rgb(186, 63, 29)'\n    },\n    icon: {\n        fontSize:'1.8rem',\n        verticalAlign:'text-top'\n    },\n    button: {\n        margin:'0 0 1.5rem 1rem',\n        width:'max-content',\n        height:'2.5rem',\n        borderRadius:'3rem',\n        borderColor:'rgb(161, 103, 74)',\n        color:'rgb(161, 103, 74)',\n        backgroundColor:'rgb(253, 255, 252)',\n        fontSize:'.9rem'\n    }\n}"]},"metadata":{},"sourceType":"module"}