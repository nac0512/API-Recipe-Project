{"ast":null,"code":"var _jsxFileName = \"/Users/nicollete/Desktop/API-Recipe-Project/src/pages/RandomMeal.js\",\n    _s = $RefreshSig$();\n\n// Component created to generate random meal recipe \nimport React, { useEffect, useState } from 'react';\nimport Food from '../components/Food';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RandomMeal() {\n  _s();\n\n  // States to be used and updated \n  const [info, setinfo] = useState('');\n  const [infoReady, setinfoReady] = useState(false); // Api fetched and states updated \n\n  useEffect(() => {\n    async function fetchAPI() {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/random.php');\n      const data = await response.json();\n      setinfo(data.meals);\n      setinfoReady(true);\n    }\n\n    ;\n    fetchAPI();\n  }, []); // Once info is ready, recipe is shown to the user\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.display,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: styles.main,\n      children: infoReady ? info.map((recipe, index) => /*#__PURE__*/_jsxDEV(Food, {\n        data: recipe\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Recipe Loading . . .\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RandomMeal, \"vuLiuwavUT42E+9BmLXTp+XWVH4=\");\n\n_c = RandomMeal;\nexport default RandomMeal;\nconst styles = {\n  display: {\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  main: {\n    flexGrow: '1',\n    textAlign: 'center',\n    color: 'rgb(21, 21, 21)'\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomMeal\");","map":{"version":3,"sources":["/Users/nicollete/Desktop/API-Recipe-Project/src/pages/RandomMeal.js"],"names":["React","useEffect","useState","Food","Footer","Header","RandomMeal","info","setinfo","infoReady","setinfoReady","fetchAPI","response","fetch","data","json","meals","styles","display","main","map","recipe","index","minHeight","flexDirection","flexGrow","textAlign","color"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAiBN,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C,CAHkB,CAKlB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeU,QAAf,GAA0B;AACtB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAOF,QAAQ,CAACG,IAAT,EAApB;AACAP,MAAAA,OAAO,CAACM,IAAI,CAACE,KAAN,CAAP;AACAN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AAAA;AACDC,IAAAA,QAAQ;AACX,GARQ,EAQN,EARM,CAAT,CANkB,CAgBlB;;AACA,sBACI;AAAK,IAAA,KAAK,EAAEM,MAAM,CAACC,OAAnB;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA,gBACKV,SAAS,GACVF,IAAI,CAACa,GAAL,CAAS,CAACC,MAAD,EAASC,KAAT,kBACL,QAAC,IAAD;AAAM,QAAA,IAAI,EAAED;AAAZ,SAAyBC,KAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,CADU,gBAKV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA/BQhB,U;;KAAAA,U;AAiCT,eAAeA,UAAf;AAEA,MAAMW,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AACLK,IAAAA,SAAS,EAAE,OADN;AAELL,IAAAA,OAAO,EAAC,MAFH;AAGLM,IAAAA,aAAa,EAAC;AAHT,GADE;AAMXL,EAAAA,IAAI,EAAE;AACFM,IAAAA,QAAQ,EAAC,GADP;AAEFC,IAAAA,SAAS,EAAC,QAFR;AAGFC,IAAAA,KAAK,EAAC;AAHJ;AANK,CAAf","sourcesContent":["// Component created to generate random meal recipe \n\nimport React, { useEffect, useState } from 'react';\nimport Food from '../components/Food';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nfunction RandomMeal() {\n    // States to be used and updated \n    const [info, setinfo]= useState('');\n    const [infoReady, setinfoReady] = useState(false);\n\n    // Api fetched and states updated \n    useEffect(() => {\n        async function fetchAPI() {\n            const response = await fetch('https://www.themealdb.com/api/json/v1/1/random.php');\n            const data = await (response.json());\n            setinfo(data.meals);\n            setinfoReady(true);\n        }; \n        fetchAPI();\n    }, []);\n\n    // Once info is ready, recipe is shown to the user\n    return(\n        <div style={styles.display}>\n            <Header />\n            <main style={styles.main}>\n                {infoReady ? \n                info.map((recipe, index) => (\n                    <Food data={recipe} key={index} />\n                ))\n                :\n                <p>Recipe Loading . . .</p>}\n            </main>\n            <Footer />\n        </div>\n    );\n}\n\nexport default RandomMeal;\n\nconst styles = {\n    display: {\n        minHeight: '100vh',\n        display:'flex',\n        flexDirection:'column',\n    },\n    main: {\n        flexGrow:'1',\n        textAlign:'center',\n        color:'rgb(21, 21, 21)'\n    },\n}"]},"metadata":{},"sourceType":"module"}